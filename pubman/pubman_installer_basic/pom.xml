<?xml version="1.0" encoding="UTF-8"?><!-- CDDL HEADER START The contents 
	of this file are subject to the terms of the Common Development and Distribution 
	License, Version 1.0 only (the "License"). You may not use this file except 
	in compliance with the License. You can obtain a copy of the license at license/ESCIDOC.LICENSE 
	or http://www.escidoc.de/license. See the License for the specific language 
	governing permissions and limitations under the License. When distributing 
	Covered Code, include this CDDL HEADER in each file and include the License 
	file at license/ESCIDOC.LICENSE. If applicable, add the following below this 
	CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your 
	own identifying information: Portions Copyright [yyyy] [name of copyright 
	owner] CDDL HEADER END Copyright 2006-2012 Fachinformationszentrum Karlsruhe 
	Gesellschaft für wissenschaftlich-technische Information mbH and Max-Planck- 
	Gesellschaft zur Förderung der Wissenschaft e.V. All rights reserved. Use 
	is subject to license terms. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>pubman</artifactId>
		<groupId>de.mpg.escidoc.pubman</groupId>
		<version>7.4.3-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.mpg.escidoc.pubman</groupId>
	<artifactId>pubman_installer_basic</artifactId>
	<name>pubman_installer_basic</name>
	<packaging>jar</packaging>
	<version>7.4.3-SNAPSHOT</version>

	<scm>
		<connection>scm:svn:https://subversion.mpdl.mpg.de/repos/pubman/trunk/pubman/pubman_installer_basic</connection>
		<developerConnection>scm:svn:https://subversion.mpdl.mpg.de/repos/pubman/trunk/pubman/pubman_installer_basic</developerConnection>
		<url>https://subversion.mpdl.mpg.de/repos/pubman/</url>
	</scm>

	<build>
		<defaultGoal>package</defaultGoal>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/userInputSpec.xml*</exclude>
					<exclude>**/conf.xml</exclude>
					<exclude>**/pubman.properties</exclude>
					<exclude>**/jboss*.zip</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/conf.xml</include>
					<include>**/jboss*.zip</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
<!--  
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.2</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<finalName>${project.build.finalName}-${project.version}</finalName>
  					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> 
						<phase>package</phase> 
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${staging.dir}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/izpack</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <artifactId>maven-antrun-plugin</artifactId> <version>1.1</version> 
				<executions> <execution> <id>create-staging-area</id> <phase>process-resources</phase> 
				<goals> <goal>run</goal> </goals> <configuration> <tasks> <copy todir="${staging.dir}"> 
				<fileset dir="${basedir}/src/izpack" /> </copy> </tasks> </configuration> 
				</execution> </executions> </plugin> -->
			<!-- prepare dependencies so that izpack jar tag to pickup at compile 
				time -->

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId> 
				<version>2.0</version> <executions> <execution> <id>standard-installer</id> 
				<phase>process-resources</phase> <goals> <goal>copy-dependencies</goal> </goals> 
				<configuration> <stripVersion>true</stripVersion> <excludeGroupIds>org.codehaus.izpack</excludeGroupIds> --><!-- dont want standalone compiler -->
			<!-- <outputDirectory>${staging.dir}/dependency</outputDirectory> </configuration> 
				</execution> <execution> <id>pubman_ear-installer</id> <phase>process-resources</phase> 
				<goals> <goal>copy-dependencies</goal> </goals> <configuration> <stripVersion>true</stripVersion> 
				<includeArtifactIds>pubman_ear</includeArtifactIds> <outputDirectory>${staging.dir}</outputDirectory> 
				</configuration> </execution> <execution> <id>unpack-validation</id> <phase>process-resources</phase> 
				<goals> <goal>unpack-dependencies</goal> </goals> <configuration> <includeArtifactIds>validation_presentation</includeArtifactIds> 
				<includes>**/*.xml</includes> <excludes>**/*.class</excludes> <outputDirectory>${project.build.directory}/classes/validation_presentation</outputDirectory> 
				<overWriteReleases>false</overWriteReleases> <overWriteSnapshots>true</overWriteSnapshots> 
				</configuration> </execution> </executions> </plugin> -->

			<!-- see install.xml to see how MyHelloPanel is used -->
			<!-- <plugin> <groupId>org.codehaus.izpack</groupId> <artifactId>izpack-maven-plugin</artifactId> 
				<version>1.0-alpha-4</version> <dependencies> <dependency> <groupId>org.codehaus.izpack</groupId> 
				<artifactId>izpack-standalone-compiler</artifactId> <version>${version.izpack-standalone}</version> 
				</dependency> </dependencies> <configuration> <izpackBasedir>${staging.dir}</izpackBasedir> 
				<customPanelDirectory>${staging.dir}</customPanelDirectory> <descriptorEncoding>UTF-8</descriptorEncoding> 
				</configuration> <executions> <execution> <id>standard-installer</id> <phase>package</phase> 
				<goals> <goal>izpack</goal> </goals> </execution> </executions> </plugin> -->
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.0,)
										</versionRange>
										<goals>
											<goal>
												unpack-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.1,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<properties>
		<staging.dir>${project.build.directory}/staging</staging.dir>
		<version.izpack-standalone>4.3.5</version.izpack-standalone>
		<escidoc.search.and.export.default.sql.query>escidoc.metadata=test</escidoc.search.and.export.default.sql.query>
	</properties>

	<profiles>
		<profile>
			<id>env-production-opensource</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<escidoc.pubman.instance.url>http://localhost:8080</escidoc.pubman.instance.url>
				<escidoc.cone.service.url>http://localhost:8080/cone/</escidoc.cone.service.url>
				<escidoc.cone.database.server.name>localhost</escidoc.cone.database.server.name>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources/opensource</directory>
						<filtering>true</filtering>
						<includes>
							<include>pubman.properties</include>
						</includes>

					</resource>
					<resource>
						<directory>src/main/resources/mpg</directory>
						<filtering>false</filtering>
						<excludes>
							<exclude>pubman.properties</exclude>
						</excludes>
					</resource>
				</resources>
			</build>

		</profile>
		<profile>
			<id>env-development</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources/mpg</directory>
						<includes>
							<include>**/*.properties</include>
						</includes>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>src/main/resources/opensource</directory>
						<excludes>
							<exclude>**/*.properties</exclude>
						</excludes>
						<filtering>false</filtering>
					</resource>
				</resources>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>de.mpg.escidoc.pubman</groupId>
			<artifactId>pubman_ear</artifactId>
			<version>7.4.3-SNAPSHOT</version>
			<scope>provided</scope>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services</groupId>
			<artifactId>validation_presentation</artifactId>
			<version>${version.validation_presentation}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services</groupId>
			<artifactId>framework_access</artifactId>
			<version>${version.framework_access}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services</groupId>
			<artifactId>cone</artifactId>
			<version>${version.cone}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.mpg.escidoc.services</groupId>
			<artifactId>common_logic</artifactId>
			<version>${version.common_logic}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.izpack</groupId>
			<artifactId>izpack-standalone-compiler</artifactId>
			<version>${version.izpack-standalone}</version>
			<optional>true</optional>
			<exclusions>
				<exclusion>
					<groupId>org.apache.ant</groupId>
					<artifactId>ant</artifactId>					
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>1.5.6</version>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.0-801.jdbc4</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

</project>