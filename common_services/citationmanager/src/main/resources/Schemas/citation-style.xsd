<?xml version="1.0" encoding="UTF-8"?>
	<!--
		CDDL HEADER START The contents of this file are subject to the terms
		of the Common Development and Distribution License, Version 1.0 only
		(the "License"). You may not use this file except in compliance with
		the License. You can obtain a copy of the license at
		license/ESCIDOC.LICENSE or http://www.escidoc.org/license. See the
		License for the specific language governing permissions and
		limitations under the License. When distributing Covered Code, include
		this CDDL HEADER in each file and include the License file at
		license/ESCIDOC.LICENSE. If applicable, add the following below this
		CDDL HEADER, with the fields enclosed by brackets "[]" replaced with
		your own identifying information: Portions Copyright [yyyy] [name of
		copyright owner] CDDL HEADER END Copyright 2006-2010
		Fachinformationszentrum Karlsruhe Gesellschaft für
		wissenschaftlich-technische Information mbH and Max-Planck-
		Gesellschaft zur Förderung der Wissenschaft e.V. All rights reserved.
		Use is subject to license terms.
	-->
	<!--
		XML Schema for Citation Style Language $Author: vdm $ $Revision: 142 $
		$LastChangedDate: 2007-11-12 15:55:12 +0100 (Mon, 12 Nov 2007) $
	-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns="http://www.escidoc.de/citationstyle"
	targetNamespace="http://www.escidoc.de/citationstyle"
	>

	<!--citation-style -->
	<xs:element name="citation-style">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="variables" minOccurs="0" maxOccurs="unbounded" />
				<xs:element ref="predefined-layout-elements" minOccurs="0" maxOccurs="unbounded" />
				<xs:element ref="cs-layout-definition" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="element-specific" type="yes-noType"
				use="required" />
			<xs:attribute name="read-only" type="yes-noType" use="required" />
			<xs:attribute name="name" type="xs:string" use="required" />
			<xs:attribute name="md-xpath" type="xs:string" use="required" />
			<xs:attribute name="source-placeholder-tag" type="xs:Name" use="required" />
			<xs:attribute name="citation-placeholder-tag" type="xs:Name" use="required" />
			<!-- get global set of default variables (CitationStyle/variables.xml) -->
			<xs:attribute name="include-global-default-variables" type="yes-noType" />
			<!-- get set of default variables (CitationStyle/<Citation Style>/variables.xml) -->
			<xs:attribute name="include-default-variables" type="yes-noType" />
			<!-- get global set of layout-elements (CitationStyle/layout-elements.xml) -->
			<xs:attribute name="include-global-layout-elements" type="yes-noType" />
			<!-- get local set of default layout-elements (CitationStyle/<Citation Style>/layout-elements.xml) -->
			<xs:attribute name="include-default-layout-elements" type="yes-noType" />
		</xs:complexType>
	</xs:element>

	<!-- variables-->
	<xs:element name="variables">
		<xs:complexType>
			<xs:sequence>
					<xs:element ref="variable" maxOccurs="unbounded"/>
			</xs:sequence>
			<!-- variables of other citation style can be reused -->
			<xs:attribute name="ref" type="xs:Name" />
		</xs:complexType>
	</xs:element>

	<xs:element name="variable">
		<xs:complexType mixed="true">
			<xs:attribute name="name" type="xs:Name" use="required" />
			<xs:attribute name="type" type="xs:anySimpleType" />
		</xs:complexType>
	</xs:element>

	<xs:element name="predefined-layout-elements">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="layout-element" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<!-- cs-layout-definition -->
	<xs:element name="cs-layout-definition">
		<xs:complexType>
			<xs:group ref="layout-elementGroup" minOccurs="0" maxOccurs="unbounded" />
			<xs:attribute name="name" type="xs:Name" use="required" />
		</xs:complexType>
	</xs:element>



	<!-- layout-element -->
	<xs:element name="layout-element" >
		<xs:complexType>
			<xs:group ref="layout-elementGroup" minOccurs="0" maxOccurs="unbounded" />
			<xs:attribute name="name" type="xs:Name" />
			<xs:attribute name="ref" />
			<xs:attribute name="repeatable" type="yes-noType" />
		<!--		<xs:attribute name="func" type="funcType" />-->
		</xs:complexType>
	</xs:element>


	<xs:group name="layout-elementGroup">
		<xs:sequence>
			<xs:element ref="parameters" minOccurs="0" />
			<xs:element ref="elements" minOccurs="0" />
		</xs:sequence>
	</xs:group>

	<!-- elements -->
	<xs:element name="elements">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="layout-element" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="position" type="positionType" />
		</xs:complexType>
	</xs:element>

	<!-- parameters -->
	<xs:element name="parameters">
		<xs:complexType>
			<xs:all>
				<xs:element ref="valid-if" minOccurs="0" />
				<xs:element ref="starts-with" minOccurs="0" />
				<xs:element ref="ends-with" minOccurs="0" />
				<xs:element ref="font-style" minOccurs="0" />
				<xs:element ref="i18n" minOccurs="0" />
				<xs:element ref="delimiter" minOccurs="0" />
				<xs:element ref="internal-delimiter" minOccurs="0" />
				<xs:element ref="max-count" minOccurs="0" />
<!--				<xs:element ref="max-count-ends-with" minOccurs="0" />-->
<!--				<xs:element ref="max-length" minOccurs="0" />-->
				<xs:element ref="max-length-ends-with" minOccurs="0" />
			</xs:all>
			<xs:attribute name="position" type="positionType" />
		</xs:complexType>
	</xs:element>

	<xs:element name="valid-if" type="xs:string" />

	<xs:element name="starts-with">
		<xs:complexType>
			<xs:attribute name="value" use="required" />
			<xs:attribute name="mode" type="modeType" />
		</xs:complexType>
	</xs:element>

	<xs:element name="ends-with">
		<xs:complexType>
			<xs:attribute name="value" use="required" />
		</xs:complexType>
	</xs:element>

	<xs:element name="font-style">
		<xs:complexType>
			<xs:attribute name="ref" type="xs:Name" use="required" />
		</xs:complexType>
	</xs:element>
	
	<xs:element name="i18n">
		<xs:complexType>
			<xs:attribute name="ref" type="xs:Name" use="required"/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="delimiter">
		<xs:complexType>
			<xs:attribute name="value" type="xs:string" use="required" />
		</xs:complexType>
	</xs:element>

	<xs:element name="internal-delimiter">
		<xs:complexType>
			<xs:attribute name="value" type="xs:string" use="required" />
		</xs:complexType>
	</xs:element>

	<xs:element name="max-count">
		<xs:complexType mixed="true">
			<xs:attribute name="value" type="xs:integer" use="required" />
		</xs:complexType>
	</xs:element>

	<xs:element name="max-count-ends-with">
		<xs:complexType mixed="true">
			<xs:attribute name="value" type="xs:string"  use="required" />
		</xs:complexType>
	</xs:element>

	<xs:element name="max-length">
		<xs:complexType mixed="true">
			<xs:attribute name="value" type="xs:integer" use="required" />
		</xs:complexType>
	</xs:element>

	<xs:element name="max-length-ends-with">
		<xs:complexType mixed="true">
			<xs:attribute name="value" type="xs:string" use="required" />
		</xs:complexType>
	</xs:element>

	<!-- shared types -->
	<xs:simpleType name="repeatableType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="yes" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="yes-noType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="yes" />
			<xs:enumeration value="no" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="positionType">
		<xs:restriction base="xs:string">
			<xs:pattern value="last|default|[0-9][0-9]|[1-9]" />
		</xs:restriction>
	</xs:simpleType>


<!--	<xs:simpleType name="funcType">-->
<!--		<xs:restriction base="xs:string">-->
<!--			<xs:enumeration value="func:get_initials" />-->
<!--			<xs:enumeration value="func:get_year" />-->
<!--			<xs:enumeration value="func:get_month" />-->
<!--			<xs:enumeration value="func:get_day" />-->
<!--			<xs:enumeration value="func:get_month_name" />-->
<!--		</xs:restriction>-->
<!--	</xs:simpleType>-->
	
	<xs:simpleType name="modeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="static" />
		</xs:restriction>
	</xs:simpleType>


</xs:schema>
